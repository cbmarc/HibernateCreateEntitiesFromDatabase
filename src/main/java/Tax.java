// default package
// Generated 25/07/2015 18:50:24 by Hibernate Tools 3.2.2.GA


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Tax generated by hbm2java
 */
@Entity
@Table(name="tax"
)
public class Tax  implements java.io.Serializable {


     private Long id;
     private String name;
     private BigDecimal value;
     private Set<Invoice> invoices = new HashSet<Invoice>(0);

    public Tax() {
    }

    public Tax(String name, BigDecimal value, Set<Invoice> invoices) {
       this.name = name;
       this.value = value;
       this.invoices = invoices;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    
    @Column(name="name")
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="value")
    public BigDecimal getValue() {
        return this.value;
    }
    
    public void setValue(BigDecimal value) {
        this.value = value;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="invoice_tax", joinColumns = { 
        @JoinColumn(name="tax_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="invoice_id", nullable=false, updatable=false) })
    public Set<Invoice> getInvoices() {
        return this.invoices;
    }
    
    public void setInvoices(Set<Invoice> invoices) {
        this.invoices = invoices;
    }




}


