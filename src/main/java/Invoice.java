// default package
// Generated 25/07/2015 18:50:24 by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Invoice generated by hbm2java
 */
@Entity
@Table(name="invoice"
    , uniqueConstraints = @UniqueConstraint(columnNames="number") 
)
public class Invoice  implements java.io.Serializable {


     private Long id;
     private Client client;
     private Address address;
     private Date invoiceDate;
     private Integer number;
     private Date paymentDate;
     private Set<InvoiceLine> invoiceLines = new HashSet<InvoiceLine>(0);
     private Set<Tax> taxes = new HashSet<Tax>(0);

    public Invoice() {
    }

    public Invoice(Client client, Address address, Date invoiceDate, Integer number, Date paymentDate, Set<InvoiceLine> invoiceLines, Set<Tax> taxes) {
       this.client = client;
       this.address = address;
       this.invoiceDate = invoiceDate;
       this.number = number;
       this.paymentDate = paymentDate;
       this.invoiceLines = invoiceLines;
       this.taxes = taxes;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="client_id")
    public Client getClient() {
        return this.client;
    }
    
    public void setClient(Client client) {
        this.client = client;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="address_id")
    public Address getAddress() {
        return this.address;
    }
    
    public void setAddress(Address address) {
        this.address = address;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="invoice_date", length=19)
    public Date getInvoiceDate() {
        return this.invoiceDate;
    }
    
    public void setInvoiceDate(Date invoiceDate) {
        this.invoiceDate = invoiceDate;
    }
    
    @Column(name="number", unique=true)
    public Integer getNumber() {
        return this.number;
    }
    
    public void setNumber(Integer number) {
        this.number = number;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="payment_date", length=19)
    public Date getPaymentDate() {
        return this.paymentDate;
    }
    
    public void setPaymentDate(Date paymentDate) {
        this.paymentDate = paymentDate;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="invoice")
    public Set<InvoiceLine> getInvoiceLines() {
        return this.invoiceLines;
    }
    
    public void setInvoiceLines(Set<InvoiceLine> invoiceLines) {
        this.invoiceLines = invoiceLines;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="invoice_tax", joinColumns = { 
        @JoinColumn(name="invoice_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="tax_id", nullable=false, updatable=false) })
    public Set<Tax> getTaxes() {
        return this.taxes;
    }
    
    public void setTaxes(Set<Tax> taxes) {
        this.taxes = taxes;
    }




}


